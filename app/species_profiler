#!/usr/bin/env Rscript


#-#-#-#-#-#-#-#-#-#-#-#-#
# Argument parsing
#-#-#-#-#-#-#-#-#-#-#-#-#
library(optparse)
option_list <- list( 
    make_option("--db",help="Path to database directory [default: %default]",default="/app/db"),
    make_option("--out", help="Name of the output file [default: %default]",default="out.tsv"),
    make_option("--thread", help="Number of thread to use [default: %default]",type = "integer",default=3)
)
opt <- parse_args(
	OptionParser(
		description = "
		  Compute Average Nucleotide Identity between given assembly and genomes in the database. 
		  Produce a TSV table with ANI score and NCBI taxonomy informations.",
		option_list = option_list
	),
	positional_arguments = 1L
)

#-#-#-#-#-#-#-#-#-#-#-#-#
# Script
#-#-#-#-#-#-#-#-#-#-#-#-#
suppressPackageStartupMessages({
  library(dplyr)
	library(stringr)
})


#-#-#-#-#-#-#-#-#-#
# Load DB
#-#-#-#-#-#-#-#-#-#
db <- readr::read_tsv(file.path(opt$options$db,"db.tsv"),col_types = "c")

#-#-#-#-#-#-#-#-#-#
# Run FastANI
#-#-#-#-#-#-#-#-#-#
ani_file <- tempfile()
cmd <- stringr::str_glue("/app/fastANI --threads {opt$thread} --refList {file.path(opt$options$db,'fastANI.rl')} --query '{opt$args}' --output {ani_file}")
print(cmd)
system(cmd)

# Load FastANI output and add DB informations
#ani_file <- "test.ani"
readr::read_tsv(ani_file,col_names = c("query","ref","ANI","bi_frag","query_frag")) |>
	mutate(assembly_acc=str_replace(basename(ref),".fna$",""),ref=NULL,query=NULL) |>
	left_join(db,by="assembly_acc",relationship="one-to-one") |>
	relocate(assembly_acc) |>
	readr::write_tsv(file=opt$options$out)

